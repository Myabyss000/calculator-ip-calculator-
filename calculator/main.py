"""
Scientific Calculator Launcher
Choose between Command Line Interface or Graphical User Interface
"""

import sys
import os

def show_welcome():
    """Display welcome message and options"""
    print("=" * 60)
    print("üßÆ SCIENTIFIC CALCULATOR")
    print("=" * 60)
    print("Welcome to the Advanced Scientific Calculator!")
    print("\nChoose your interface:")
    print("1. üì± GUI (Graphical User Interface)")
    print("2. üíª CLI (Command Line Interface)")
    print("3. üì° IP Calculator (Network Tools)")
    print("4. ‚ùì Help")
    print("5. üö™ Exit")
    print("=" * 60)

def show_help():
    """Display help information"""
    help_text = """
üìö CALCULATOR FEATURES:

üî¢ BASIC OPERATIONS:
   ‚Ä¢ Addition, Subtraction, Multiplication, Division
   ‚Ä¢ Exponentiation, Square Root, nth Root
   ‚Ä¢ Modulo, Absolute Value

üìê TRIGONOMETRIC FUNCTIONS:
   ‚Ä¢ sin, cos, tan (with degree/radian support)
   ‚Ä¢ asin, acos, atan (inverse functions)
   ‚Ä¢ Hyperbolic functions (sinh, cosh, tanh)
   ‚Ä¢ Inverse hyperbolic functions

üìä LOGARITHMIC & EXPONENTIAL:
   ‚Ä¢ Natural logarithm (ln), Common log (log10)
   ‚Ä¢ Binary logarithm (log2), Custom base logarithm
   ‚Ä¢ Exponential functions (e^x, 10^x, 2^x)

üî¨ ADVANCED FUNCTIONS:
   ‚Ä¢ Factorial, Combinations, Permutations
   ‚Ä¢ Greatest Common Divisor (GCD)
   ‚Ä¢ Least Common Multiple (LCM)
   ‚Ä¢ Floor, Ceiling, Rounding functions

üíæ MEMORY OPERATIONS:
   ‚Ä¢ Store, Recall, Clear, Add, Subtract

üìà COMPLEX NUMBERS:
   ‚Ä¢ Basic complex arithmetic
   ‚Ä¢ Magnitude and phase calculations

üéØ INTERFACE OPTIONS:
   1. GUI - Point-and-click interface with buttons
      ‚Ä¢ Visual button layout
      ‚Ä¢ History panel
      ‚Ä¢ Memory indicator
      ‚Ä¢ Angle mode selection

   2. CLI - Command-line interface for advanced users
      ‚Ä¢ Type expressions directly
      ‚Ä¢ Command history
      ‚Ä¢ Extensive help system
      ‚Ä¢ Keyboard shortcuts

üìù EXPRESSION EXAMPLES:
   ‚Ä¢ sin(pi/2)         - Sine of œÄ/2
   ‚Ä¢ sqrt(16)          - Square root of 16
   ‚Ä¢ log(e)            - Natural log of e
   ‚Ä¢ factorial(5)      - 5! = 120
   ‚Ä¢ 2**8              - 2 to the power of 8
   ‚Ä¢ gcd(48, 18)       - GCD of 48 and 18

Press Enter to continue...
    """
    print(help_text)
    try:
        input()
    except (EOFError, KeyboardInterrupt):
        pass

def launch_gui():
    """Launch the GUI version"""
    try:
        print("üöÄ Starting GUI Calculator...")
        from calculator_gui import ScientificCalculatorGUI
        calculator = ScientificCalculatorGUI()
        calculator.run()
    except ImportError as e:
        print(f"‚ùå Error importing GUI: {e}")
        print("Make sure calculator_gui.py is in the same directory.")
    except Exception as e:
        print(f"‚ùå Error starting GUI: {e}")

def launch_cli():
    """Launch the CLI version"""
    try:
        print("üöÄ Starting CLI Calculator...")
        from calculator_cli import CalculatorCLI
        calculator = CalculatorCLI()
        calculator.run()
    except ImportError as e:
        print(f"‚ùå Error importing CLI: {e}")
        print("Make sure calculator_cli.py is in the same directory.")
    except Exception as e:
        print(f"‚ùå Error starting CLI: {e}")

def launch_ip_calculator():
    """Launch the IP Calculator GUI"""
    try:
        print("üöÄ Starting IP Calculator...")
        from ip_calculator_gui import IPCalculatorGUI
        calculator = IPCalculatorGUI()
        calculator.run()
    except ImportError as e:
        print(f"‚ùå Error importing IP Calculator: {e}")
        print("Make sure ip_calculator_gui.py is in the same directory.")
    except Exception as e:
        print(f"‚ùå Error starting IP Calculator: {e}")

def main():
    """Main launcher function"""
    while True:
        try:
            # Clear screen
            os.system('cls' if os.name == 'nt' else 'clear')
            
            show_welcome()
            
            try:
                choice = input("\nüëÜ Enter your choice (1-5): ").strip()
            except (EOFError, KeyboardInterrupt):
                print("\n\nüëã Calculator closed. Goodbye!")
                break
            
            if choice == '1':
                launch_gui()
            elif choice == '2':
                launch_cli()
            elif choice == '3':
                launch_ip_calculator()
            elif choice == '4':
                show_help()
            elif choice == '5':
                print("\nüëã Thank you for using the Scientific Calculator!")
                print("Goodbye! üßÆ")
                break
            else:
                print("\n‚ùå Invalid choice. Please enter 1, 2, 3, 4, or 5.")
                try:
                    input("Press Enter to continue...")
                except (EOFError, KeyboardInterrupt):
                    print("\n\nüëã Calculator closed. Goodbye!")
                    break
                
        except KeyboardInterrupt:
            print("\n\nüëã Calculator closed. Goodbye!")
            break
        except Exception as e:
            print(f"\n‚ùå An error occurred: {str(e)}")
            try:
                input("Press Enter to continue...")
            except (EOFError, KeyboardInterrupt):
                print("\n\nüëã Calculator closed. Goodbye!")
                break

if __name__ == "__main__":
    main()
